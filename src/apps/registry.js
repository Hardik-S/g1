import { createLazyLoader } from './registry/loaders';

export const APP_METADATA = [
  {
    id: 'day-switcher',
    title: 'Day Switcher',
    description: 'Switch between days of the week with beautiful animations',
    icon: '📅',
    category: 'Utilities',
    component: null,
    loader: () => import('./DaySwitcherApp'),
    path: '/apps/day-switcher',
    tags: ['react', 'ui', 'interactive'],
    created: '2025-09-16',
    featured: true,
    version: '3.12.00',
  },
  {
    id: 'catpad',
    title: 'CatPad',
    description: 'Feline-themed notepad with cloud sync across every browser.',
    icon: '🗒️',
    category: 'Productivity',
    component: null,
    loader: () => import('./CatPadApp'),
    path: '/apps/catpad',
    tags: ['notes', 'editor', 'sync', 'cats'],
    created: '2025-09-21',
    featured: true,
    version: '4.15.00',
  },
  {
    id: 'cat-connect-four',
    title: 'Cat Connect Four',
    description: 'Drop custom paws against friends or café cats with animated sparkle wins.',
    icon: '🐾',
    category: 'Games',
    component: null,
    loader: () => import('./CatConnectFourApp'),
    path: '/apps/cat-connect-four',
    tags: ['game', 'board', 'connect-four', 'cats'],
    created: '2025-09-22',
    featured: true,
    version: '2.34.00',
  },
  {
    id: 'zen-do',
    title: 'Zen Do',
    description: 'Minimalist to-do garden with weekly buckets, focus mode, and gist sync.',
    icon: '🌿',
    category: 'Productivity',
    component: null,
    loader: () => import('./ZenDoApp'),
    path: '/apps/zen-do',
    tags: ['tasks', 'productivity', 'gist', 'drag-and-drop'],
    created: '2025-09-21',
    featured: true,
    version: '5.18.00',
  },
  {
    id: 'cat-typing-speed-test',
    title: 'Cat Typing Speed Test',
    description: 'Sprint through cat-themed sentences to measure WPM, CPM, and accuracy.',
    icon: '⌨️',
    category: 'Education',
    component: null,
    loader: () => import('./CatTypingSpeedTestApp'),
    path: '/apps/cat-typing-speed-test',
    tags: ['typing', 'speed', 'practice', 'cats'],
    created: '2025-09-21',
    featured: true,
    version: '1.22.00',
  },
  {
    id: 'quantum-playground',
    title: 'Quantum Playground',
    description: 'Design circuits, run a four-qubit simulator, and visualize state-vector measurements.',
    icon: '⚛️',
    category: 'Education',
    component: null,
    loader: () => import('./quantum-playground'),
    path: '/apps/quantum-playground',
    tags: ['quantum', 'simulator', 'visualization', 'education'],
    created: '2025-09-22',
    featured: true,
    version: '4.32.00',
  },
  {
    id: 'lang-math',
    title: 'LangMath',
    description: 'Turn number words and operator phrases into live calculations using client-side Python.',
    icon: '🧮',
    category: 'Education',
    component: null,
    loader: () => import('./LangMathApp'),
    path: '/apps/lang-math',
    tags: ['calculator', 'language', 'python', 'education'],
    created: '2025-10-20',
    featured: true,
    version: '2.56.00',
  },
  {
    id: 'n-pomodoro',
    title: 'N-Pomodoro Timer',
    description: 'Customizable Pomodoro timer with N activities and deep space theme',
    icon: '🍅',
    category: 'Productivity',
    component: null,
    loader: () => import('./NPomodoroApp'),
    path: '/apps/n-pomodoro',
    tags: ['productivity', 'timer', 'space', 'customizable'],
    created: '2025-09-16',
    featured: true,
    version: '3.42.00',
  },
  {
    id: 'snake',
    title: 'Snake Game',
    description: 'Classic Snake game with keyboard controls and modern design',
    icon: '🐍',
    category: 'Games',
    component: null,
    loader: () => import('./SnakeApp'),
    path: '/apps/snake',
    tags: ['game', 'classic', 'keyboard', 'arcade'],
    created: '2025-09-17',
    featured: true,
    version: '1.26.00',
  },
  {
    id: 'hexa-snake-bee',
    title: 'Hexa-Snake (Bee Edition)',
    description: 'Guide a bee through a honeycomb hex-grid and collect golden nectar',
    icon: '🐝',
    category: 'Games',
    component: null,
    loader: () => import('./HexaSnakeApp'),
    path: '/apps/hexa-snake',
    tags: ['game', 'python', 'pygame', 'hex', 'arcade'],
    created: '2025-09-17',
    featured: true,
    version: '2.48.00',
  },
  {
    id: 'pong',
    title: 'Neon Pong',
    description: 'Fast-paced neon Pong with solo and versus modes plus session history',
    icon: '🏓',
    category: 'Games',
    component: null,
    loader: () => import('./PongApp'),
    path: '/apps/pong',
    tags: ['game', 'arcade', 'canvas', 'retro'],
    created: '2025-09-17',
    featured: true,
    version: '5.36.00',
  },
  {
    id: 'pong-ring',
    title: 'Pong Ring',
    description: 'Circular quartz arena pong with marble glow and solo/versus modes',
    icon: '🪩',
    category: 'Games',
    component: null,
    loader: () => import('./PongRingApp'),
    path: '/apps/pong-ring',
    tags: ['game', 'canvas', 'futuristic'],
    created: '2025-09-17',
    featured: true,
    version: '3.72.00',
  },
  {
    id: 'sudoku-coffee',
    title: 'Sudoku Roast',
    description: 'A cozy coffeehouse Sudoku with handcrafted generator, solver, and notes',
    icon: '☕',
    category: 'Games',
    component: null,
    loader: () => import('./SudokuApp'),
    path: '/apps/sudoku-coffee',
    tags: ['game', 'puzzle', 'canvas', 'tailwind'],
    created: '2025-09-17',
    featured: true,
    version: '4.64.00',
  },
  {
    id: 'zen-go',
    title: 'Zen Go',
    description: 'Play 9×9 Go against a lightweight GNU Go engine with rank presets and handicaps.',
    icon: '⚫',
    category: 'Games',
    component: null,
    loader: () => import('./ZenGoApp'),
    path: '/apps/zen-go',
    tags: ['game', 'board', 'go', 'ai', 'wasm'],
    created: '2025-09-22',
    featured: true,
    version: '5.54.00',
  },
  {
    id: 'cosmos',
    title: 'Cosmos Simulator',
    description: 'Navigate a scaled solar system with Newtonian physics, trails, and teleport controls.',
    icon: '🪐',
    category: 'Exploration',
    component: null,
    loader: () => import('./CosmosApp'),
    path: '/apps/cosmos',
    tags: ['three.js', 'simulation', 'space', 'physics'],
    created: '2025-09-22',
    featured: true,
    version: '2.82.00',
  },
  {
    id: 'catnap-leap',
    title: 'CatNap Leap',
    description: 'Guide a drowsy cat through floating pillows, chase scores, and sip dreamy powerups.',
    icon: '🐱',
    category: 'Games',
    component: null,
    loader: () => import('./CatNapLeapApp'),
    path: '/apps/catnap-leap',
    tags: ['game', 'canvas', 'flappy', 'cat'],
    created: '2025-09-21',
    featured: true,
    version: '3.28.00',
  },
  {
    id: 'cache-lab',
    title: 'Cache Lab',
    description: 'Interactive cache memory learning lab with mapping, replacement, hierarchy, and assessments.',
    icon: '💾',
    category: 'Education',
    component: null,
    loader: () => import('./CacheLabApp'),
    path: '/cache-lab',
    tags: ['cache', 'education', 'react', 'interactive'],
    created: '2025-09-21',
    featured: true,
    version: '1.44.00',
  },
  {
    id: 'app-3',
    title: 'Coming Soon',
    description: 'This app is under development',
    icon: '🚧',
    category: 'Development',
    component: null,
    loader: null,
    path: '/apps/app-3',
    tags: ['coming-soon'],
    created: '2025-09-16',
    featured: false,
    disabled: true,
    version: '0.0.1',
  },
];

const DEFAULT_AUTHOR = 'Hardik-s';

const withDefaults = (app) => ({
  ...app,
  author: app.author ?? DEFAULT_AUTHOR,
});

export const APP_REGISTRY = APP_METADATA.reduce((registry, app) => {
  const appEntry = withDefaults(app);
  registry[appEntry.id] = appEntry;
  return registry;
}, {});

export const APP_CATEGORIES = {
  Utilities: { icon: '🔧', color: '#667eea' },
  Games: { icon: '🎮', color: '#ff6b6b' },
  Tools: { icon: '🛠️', color: '#4ecdc4' },
  Creative: { icon: '🎨', color: '#45b7d1' },
  Education: { icon: '📚', color: '#96ceb4' },
  Exploration: { icon: '🪐', color: '#7f9cff' },
  Productivity: { icon: '⚡', color: '#feca57' },
  Development: { icon: '💻', color: '#ff9ff3' },
  Entertainment: { icon: '🎭', color: '#54a0ff' },
};

export const getAppsByCategory = (category) => {
  return Object.values(APP_REGISTRY).filter((app) => app.category === category);
};

export const getFeaturedApps = () => {
  return Object.values(APP_REGISTRY).filter((app) => app.featured);
};

export const getAppById = (id) => {
  return APP_REGISTRY[id] || null;
};

export const getAllApps = () => {
  return Object.values(APP_REGISTRY);
};

export const getAppsCount = () => {
  return Object.keys(APP_REGISTRY).length;
};

export const getAppLoader = (id) => {
  return createLazyLoader(getAppById(id));
};
